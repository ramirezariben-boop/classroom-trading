generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://neondb_owner:npg_IG2udNxFlC6H@ep-round-smoke-ah7ta1yl-pooler.c-3.us-east-1.aws.neon.tech/neondb?sslmode=require"
}

model User {
  id            Int        @id
  name          String
  day           String?
  user          String?
  password      String     @default("")
  points        Float        @default(0)
  nip           String?
  positions     Position[]
  transfersFrom Transfer[] @relation("fromUser")
  transfersTo   Transfer[] @relation("toUser")
  txs           Tx[] @relation("UserTxs")
}

model Value {
  id          String  @id
  name        String
  categoryId  String?
  description String?
}

model Tx {
  id        Int      @id @default(autoincrement())
  user      User     @relation("UserTxs", fields: [userId], references: [id])
  userId    Int
  type      String   // BUY, SELL, TRANSFER_IN, TRANSFER_OUT, etc.
  valueId   String?
  qty       Float?
  deltaPts  Float
  ts        DateTime @default(now())
  note      String?  
}

model Transfer {
  id       String   @id @default(cuid())
  ts       DateTime @default(now())
  fromId   Int
  toId     Int
  amount   Int
  fromUser User     @relation("fromUser", fields: [fromId], references: [id])
  toUser   User     @relation("toUser", fields: [toId], references: [id])
}

model Position {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  valueId   String
  qty       Float
  avgPrice  Float
  updatedAt DateTime @updatedAt

  @@unique([userId, valueId])
}

model Candle {
  valueId   String
  timeframe String
  ts        DateTime
  open      Float
  high      Float
  low       Float
  close     Float
  time      BigInt

  @@id([valueId, time])
}
