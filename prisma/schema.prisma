generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        String   @id @default(cuid())
  name      String
  points    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  positions Position[]
  txs       Tx[]
  transfersFrom Transfer[] @relation("fromUser")
  transfersTo   Transfer[] @relation("toUser")
}

model Value {
  id          String   @id
  name        String
  categoryId  String?
  description String?
}

model Tx {
  id          String   @id @default(cuid())
  ts          DateTime @default(now())
  type        String
  userId      String
  valueId     String?
  qty         Int?
  deltaPoints Int

  user  User   @relation(fields: [userId], references: [id])
}

model Transfer {
  id     String   @id @default(cuid())
  ts     DateTime @default(now())
  fromId String
  toId   String
  amount Int

  fromUser User @relation("fromUser", fields: [fromId], references: [id])
  toUser   User @relation("toUser", fields: [toId], references: [id])
}

model Position {
  id       String   @id @default(cuid())
  userId   String
  valueId  String
  quantity Int

  user User @relation(fields: [userId], references: [id])

  @@unique([userId, valueId])
}

model Candle {
  id        String   @id @default(cuid())
  ticker    String
  timeframe String
  ts        DateTime
  open      Float
  high      Float
  low       Float
  close     Float
  volume    Float?

  @@unique([ticker, timeframe, ts], name: "ticker_timeframe_ts")
  @@index([ticker, timeframe, ts])

}
