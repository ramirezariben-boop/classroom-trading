generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        String   @id            
  name      String
  codeHash  String                  // hash del c√≥digo/clave
  points    Int      @default(5)
  username  String?                 // ej. "angel"
  day       String?                 // ej. "sab" | "dom"
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  positions Position[]
  txs       Tx[]
  outTxfs   Transfer[] @relation("outgoing")
  inTxfs    Transfer[] @relation("incoming")

  @@index([day])
}

model Position {
  id        String   @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  valueId   String
  qty       Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@unique([userId, valueId])
}

model Tx {
  id       String   @id @default(cuid())
  userId   String
  user     User     @relation(fields: [userId], references: [id])
  ts       DateTime @default(now())
  type     String   // BUY | SELL | TRANSFER_IN | TRANSFER_OUT
  valueId  String?
  qty      Int?
  deltaPts Decimal   // +/- puntos (deja Decimal para centavos)

  @@index([ts])
  @@index([userId, ts])
}

model Transfer {
  id        String   @id @default(cuid())
  fromId    String?
  fromUser  User?    @relation("outgoing", fields: [fromId], references: [id])
  toId      String?
  toUser    User?    @relation("incoming", fields: [toId], references: [id])
  amount    Int
  ts        DateTime @default(now())

  @@index([ts])
  @@index([fromId, ts])
  @@index([toId, ts])
}

model Candle {
  id       String  @id @default(cuid())
  valueId  String
  time     BigInt
  open     Float
  high     Float
  low      Float
  close    Float

  @@unique([valueId, time])
  @@index([valueId, time])
}
